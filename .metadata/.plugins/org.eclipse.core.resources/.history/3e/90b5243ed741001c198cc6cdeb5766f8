/*
 * API_debounce.c
 *
 *  Created on: 9 nov. 2021
 *      Author: alex
 */

#include "API_debounce.h"
#include "API_delay.h"


#define DELAY_DEBOUNCING 100

static delay_t delayDebouncing;

static void buttonPressed();
static void buttonRealeased();

bool_t debounceInit(void)
{
	currentStatus = BUTTON_UP;
	delayInit(&delayDebouncing,DELAY_DEBOUNCING);

	/* Initialize BSP PB for BUTTON_USER */
	BSP_PB_Init(BUTTON_USER, BUTTON_MODE_GPIO);

	/* Initialize BSP Led for LED1, LED2 and LED3 */
	BSP_LED_Init(LED1);
	BSP_LED_Init(LED2);

	return true;
}

void debounceUpdate(void)
{
	switch (currentStatus){
		case BUTTON_UP:
		{
			if(BSP_PB_GetState(BUTTON_USER)){
				currentStatus = BUTTON_FALLING;
			}
			break;
		}
		case BUTTON_FALLING:
		{
			if(delayRead(&delayDebouncing)){
				if(BSP_PB_GetState(BUTTON_USER)){
					currentStatus = BUTTON_DOWN;
					buttonPressed();
				}else{
					currentStatus = BUTTON_UP;
				}
			}
			break;
		}
		case BUTTON_DOWN:
		{
			if(!BSP_PB_GetState(BUTTON_USER)){
				currentStatus = BUTTON_RISING;
			}
			break;
		}
		case BUTTON_RISING:
		{
			if(delayRead(&delayDebouncing)){
				if(BSP_PB_GetState(BUTTON_USER)){
					currentStatus = BUTTON_UP;
					buttonRealeased();
				}else{
					currentStatus = BUTTON_DOWN;
				}
			}
			break;
		}
		default:
			break;
	}
}

static void buttonPressed()
{
	BSP_LED_Toggle(LED1);
}

static void buttonRealeased()
{
	BSP_LED_Toggle(LED2);
}
